linux_tests_template: &LINUX_TESTS
  package_install_script:
    - apt-get update
    - apt-get install -y --no-install-recommends build-essential gcc gdb clang clang-tools libclang-rt-18-dev cmake ninja-build ccache valgrind curl git libatomic-ops-dev
  build_script:
    - ./configure
    - make
  test_script:
    - cd dev
    - make CC=gcc test
  test_optimized_script:
    - cd dev
    - make CC=gcc O=3 test
  test_nodebug_script:
    - ./configure --disable-rydb-debug
    - cd dev
    - make CC=gcc O=2 RYDB_DEBUG= test
    - make clean
  test_valgrind_script:
    - cd dev
    - make CC=gcc O=1 valgrind
  test_clang_sanitize_script:
    - cd dev
    - make O=2 CC=clang SANITIZE_ADDRESS_USE="" sanitize
  test_cmake_nodebug_script:
    - ./configure --disable-rydb-debug
    - cd dev
    - make O=2 cmake-test


linux_task:
  container:
    image: ubuntu:24.04
  env:
    CODECOV_TOKEN: f0a2eca9-3983-4103-a6f4-02b1caf4cbb5
  << : *LINUX_TESTS
  codecov_script:
    - cd dev
    - make clean
    - make CC=gcc coverage-gcc-create
    - bash <(curl -s https://codecov.io/bash)

linux_arm_task:
  arm_container:
    image: ubuntu:24.04
  << : *LINUX_TESTS

freebsd_task:
  freebsd_instance:
    image_family: freebsd-14-2
  package_install_script: pkg install -y gmake cmake ccache libatomic_ops
  test_script:
    - ./configure --enable-rydb-debug
    - gmake
    - cd tests
    - gmake clean
    - gmake test
    - gmake run
  test_optimized_script:
    - ./configure --enable-rydb-debug --with-build-type=Release
    - gmake
    - cd tests
    - gmake clean
    - gmake O=3 test
    - gmake run
  test_cmake_release_script:
    - ./configure --disable-rydb-debug --with-build-type=Release
    - gmake
    - cd tests
    - gmake clean
    - gmake O=3 test
    - gmake run
 
